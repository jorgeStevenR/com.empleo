# =========================
# SERVER
# =========================
# Render inyecta PORT (p.ej. 10000). En local usa 8080 por defecto.
server.port=${PORT:8080}

# =========================
# DATASOURCE (Supabase Pooler)
# =========================
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

# =========================
# HIKARI (no agotar el pool del pooler)
# =========================
spring.datasource.hikari.maximumPoolSize=${DB_POOL_MAX:5}
spring.datasource.hikari.minimumIdle=2
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.poolName=PortalHikari
spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.idleTimeout=300000
spring.datasource.hikari.keepaliveTime=300000

# =========================
# JPA / HIBERNATE
# =========================
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}

# Reemplaza propiedad deprecada:
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false
# (Opcional) Hibernate detecta el dialecto solo; puedes omitir:
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# =========================
# CORS
# =========================
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# =========================
# JSON
# =========================
spring.jackson.serialization.fail-on-empty-beans=false

# =========================
# JWT
# =========================
app.jwt.secret=${APP_JWT_SECRET}
app.jwt.expiration-ms=${APP_JWT_EXPIRATION_MS:86400000}
